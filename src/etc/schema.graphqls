type Mutation {
    createPaymentIntent(input: CreateIntentInput!): PaymentIntent
    @doc(description: "Create a payment intent manually")
    @resolver(class: "\\ScandiPWA\\StripeGraphQl\\Model\\Resolver\\CreatePaymentIntent")
    @deprecated(reason: "Payment handling logic has been moved entirely to BE, no need to create payment intent separately.")
}

input CreateIntentInput {
    guest_cart_id: String
}

type PaymentIntent {
    intent_client_secret: String
}

extend type StoreConfig @doc(description: "The type contains information about a store config") {
    stripe_mode: String @doc(description: "Stripe Mode, either test or live")
    stripe_test_pk: String @doc(description: "Stripe Test Publishable API Key")
    stripe_live_pk: String @doc(description: "Stripe Live Publishable API Key")
}

input StripePaymentsInput {
    cc_stripejs_token: String!
    cc_save: Boolean!
}

input PaymentMethodInput {
    stripe_payments: StripePaymentsInput
    @doc(description: "Required input type for Stripe payments")
}
